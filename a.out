; ModuleID = 'MicroC'
source_filename = "MicroC"

@b = global i32 0
@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@fmt.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.3 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @puts(i8*, ...)

declare i8* @pitch_to_int(i8*, ...)

define i32 @main() {
entry:
  store i32 3, i32* @b
  %foo_result = call i32 @foo()
  ret i32 0
}

define i32 @foo() {
entry:
  %b = load i32, i32* @b
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt.2, i32 0, i32 0), i32 %b)
  ret i32 0
}
