; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@fmt.1 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@"4#" = private unnamed_addr constant [4 x i8] c"1#1\00", align 1
@"123" = private unnamed_addr constant [6 x i8] c"hello\00", align 1

declare i32 @printf(i8*, ...)

declare i8* @puts(i8*, ...)

define i32 @main() {
entry:
  %c = alloca i8*
  %b = alloca i32
  %p = alloca i8*
  store i32 1, i32* %b
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"4#", i32 0, i32 0), i8** %p
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"123", i32 0, i32 0), i8** %c
  %p1 = load i8*, i8** %p
  %prints = call i8* (i8*, ...) @puts(i8* %p1)
  %c2 = load i8*, i8** %c
  %prints3 = call i8* (i8*, ...) @puts(i8* %c2)
  %b4 = load i32, i32* %b
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @fmt, i32 0, i32 0), i32 %b4)
  ret i32 0
}
